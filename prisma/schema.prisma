generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

model User {
  id            String       @id @default(cuid())
  name          String?
  email         String?      @unique
  password      String?
  emailVerified DateTime?
  image         String?
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt
  permissions   Permission[]
}

model Project {
  id          String       @id @default(cuid())
  name        String?
  locations   Location[]
  maps        Map[]
  permissions Permission[]
}

model Permission {
  id              String   @id @default(cuid())
  permissionLevel Int?
  userId          String?
  projectId       String?
  project         Project? @relation(fields: [projectId], references: [id])
  user            User?    @relation(fields: [userId], references: [id])
}

model Map {
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  id        Int       @id @default(autoincrement())
  name      String
  projectId String?
  project   Project?  @relation(fields: [projectId], references: [id])
  mapNodes  MapNode[]
}

model Location {
  id        Int       @id @default(autoincrement())
  createdAt DateTime  @default(now())
  name      String
  projectId String?
  updatedAt DateTime  @updatedAt
  project   Project?  @relation(fields: [projectId], references: [id])
  mapNodes  MapNode[]
}

model MapNode {
  id         String    @id @default(cuid())
  locationId Int
  mapId      Int
  parentId   String?
  location   Location  @relation(fields: [locationId], references: [id])
  map        Map       @relation(fields: [mapId], references: [id])
  parent     MapNode?  @relation("NestedLocations", fields: [parentId], references: [id])
  children   MapNode[] @relation("NestedLocations")
}
